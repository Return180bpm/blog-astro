---
import { formatDateObjToCustom } from '@/utils'
import type { CollectionEntry } from 'astro:content'
interface Props {
	post: CollectionEntry<'posts'>
	isPartOfList: boolean
}

const { post, isPartOfList } = Astro.props
const { title, description, image, tags, pubDate } = post.data
const { Content } = await post.render()
---

<article class="mt-48 first-of-type:mt-0 flex flex-col gap-0">
	<h2
		id={title}
		class=" sm:text-3xl md:text-4xl lg:text-5xl font-bold  !mt-0"
	>
		<a href={`#${title}`}>{title}</a>
	</h2>
	{description ? (
		<h3 class="text-2xl text-stone-500">{description}</h3>
	) : null}

	{image && <img src={image.url} alt={image.alt} />}
	<Content />

	<footer
		class="mt-4 pt-2 flex flex-col gap-4 italic text-stone-500 border-t border-t-stone-400"
	>
		<span> Written on {formatDateObjToCustom(pubDate)}</span>
		{isPartOfList && (
			<a href={`/posts/${post.slug}`}>View post on own page</a>
		)}
		<div class="flex flex-wrap gap-2">
			{tags.map((tag) => (
				<a class="tag-filled" href={`/tags/${tag}`}>
					{tag}
				</a>
			))}
		</div>
	</footer>
</article>
