---
import { MarkdownInstance } from 'astro'

interface BlogPost {
	file: string
	layout: string
	title: string
	author: string
	imgAlt: string
}
export interface Props {
	post: MarkdownInstance<Record<string, any>>
}

const { post } = Astro.props as Props
const { frontmatter, file, Content } = post
const fileName = ((): string => {
	const indexOfLastBackSlash = file.lastIndexOf('/')
	const indexOfLastColon = file.lastIndexOf('.')
	const fileName = file.slice(indexOfLastBackSlash + 1, indexOfLastColon)
	return fileName
})()
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<title>{frontmatter.title}</title>
	</head>
	<body>
		<div>
			<h1>{fileName}</h1>
			<!-- {Object.keys(content).map((key, i) =>(
            <ul>
                <li>{key}: {content[key]}</li>
            </ul>
        ))} -->
		</div>
		<img src={`/${fileName}.png`} alt={frontmatter.imgAlt} />
		<Content />
	</body>
</html>
