---
import BlogPost from '@/components/BlogPost.astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { Frontmatter } from '@/types'
import { sortByDate } from '@/utils'

export async function getStaticPaths({ paginate }) {
	const unsortedPosts = await Astro.glob<Frontmatter>('./posts/100dod/*.md')
	const sortedPosts = sortByDate(unsortedPosts)
	return paginate(sortedPosts, { pageSize: 7 })
}
const { page } = Astro.props
const prevUrl = page.currentPage === 2 ? '/' : page.url.prev
const nextUrl = page.url.next
---

<BaseLayout>
	<main
		class="max-w-min px-4 prose-custom prose-md lg:prose-xl md:prose-lg prose-stone"
	>
		{page.data.map(
			({
				frontmatter: { title, imgAlt, date, hasImg },
				file,
				url,
				Content
			}) => (
				<BlogPost
					title={title}
					file={file}
					imgAlt={imgAlt}
					date={date}
					hasImg={hasImg}
					url={url}
				>
					<Content />
				</BlogPost>
			)
		)}
	</main>

	<nav
		class=" flex flex-col justify-center items-center gap-6 mx-4 px-8 py-8 prose-custom prose-xl lg:prose-2xl prose-stone border-[4px] border-stone-700 rounded-3xl"
	>
		<span>
			Page {page.currentPage} of {page.lastPage}
		</span>
		<div class="w-full h-0 border-t border-t-stone-400"></div>
		<a href="/">Beginning</a>
		<div class="w-4/12 h-0 border-t border-t-stone-400"></div>
		{prevUrl && <a href={prevUrl}>Newer</a>}
		{nextUrl && <a href={nextUrl}>Older</a>}
		<div class="w-4/12 h-0 border-t border-t-stone-400"></div>
		<a href={`/${page.lastPage}`}>End</a>
	</nav>
</BaseLayout>
